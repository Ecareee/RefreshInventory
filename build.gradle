plugins {
    id "dev.architectury.loom" version "1.5-SNAPSHOT"
    id "maven-publish"
}

base {
    archivesName = mod_name
}

version = mod_version + "-mc" + minecraft_version
group = mod_group

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()

    forge {
//        mixinConfigs = [
//                "examplemod.mixins.json"
//        ]
    }
}

repositories {
    maven { url 'https://api.modrinth.com/maven' }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"

//    mappings loom.officialMojangMappings()
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"

    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

processResources {
    var replaceProperties = [
            minecraft_version: minecraft_version, forge_version: forge_version,
            forge_version_range: forge_version_range, loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description, mod_repo: mod_repo
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1",
                "Implementation-Title"    : mod_name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}